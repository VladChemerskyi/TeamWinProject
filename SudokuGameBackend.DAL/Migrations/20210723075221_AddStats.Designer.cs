// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SudokuGameBackend.DAL.EF;

namespace SudokuGameBackend.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210723075221_AddStats")]
    partial class AddStats
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.DuelRating", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GameMode")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameMode");

                    b.ToTable("DuelLeaderboard");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.DuelStats", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GameMode")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GamesWon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("UserId", "GameMode");

                    b.ToTable("DuelStats");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.SingleStats", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GameMode")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("UserId", "GameMode");

                    b.ToTable("SingleStats");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.SolvingRating", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GameMode")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameMode");

                    b.ToTable("SolvingLeaderboard");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.DuelRating", b =>
                {
                    b.HasOne("SudokuGameBackend.DAL.Entities.User", "User")
                        .WithMany("DuelRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.DuelStats", b =>
                {
                    b.HasOne("SudokuGameBackend.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.SingleStats", b =>
                {
                    b.HasOne("SudokuGameBackend.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.SolvingRating", b =>
                {
                    b.HasOne("SudokuGameBackend.DAL.Entities.User", "User")
                        .WithMany("SolvingRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SudokuGameBackend.DAL.Entities.User", b =>
                {
                    b.Navigation("DuelRatings");

                    b.Navigation("SolvingRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
